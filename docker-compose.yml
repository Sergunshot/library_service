services:
# Django
  library:
    build:
      context: .
      dockerfile: web.dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    command: >
      sh -c "python manage.py wait_for_db &&
            python manage.py migrate &&
            python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    depends_on:
      - db

# PostgreSQL Database
  db:
    container_name: db
    image: postgres:16.0-alpine3.17
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - my_db:$PGDATA

# Redis
  redis:
    image: "redis:alpine"

  # Celery
  celery:
    restart: on-failure
    build:
      context: .
      dockerfile: celery.Dockerfile
    command: "celery -A library_service worker -l info"
    volumes:
      - ./:/app
    env_file:
      - .env
    depends_on:
      - library
      - redis
      - db

  # Celery Beat
  beat:
    restart: on-failure
    build:
      context: .
      dockerfile: beat.Dockerfile
    command: >
      sh -c "celery -A library_service beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    env_file:
      - .env
    depends_on:
      - library
      - redis
      - db

  # Flower
  flower:
    restart: on-failure
    build:
      context: .
      dockerfile: web.dockerfile
    ports:
      - "5555:5555"
    command: "celery -A library_service flower --address=0.0.0.0"
    depends_on:
      - db
      - redis
      - celery
      - beat
    env_file:
      - .env

volumes:
  my_db: